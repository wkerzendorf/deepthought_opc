{% extends "base.html.j2" %}

{% block scripts %}
<script>
monthMap = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];

function conflictExists(reviewID) {
    return $('#conflicted'+reviewID).val() != 0;
}

function grayBadge(badgeID, htmlContent) {
    badge = $('#'+badgeID);
    badge.addClass('badge-secondary');
    badge.removeClass('badge-success');
    badge.removeClass('badge-danger');
    badge.removeClass('badge-warning');
    badge.html(htmlContent);
}

function greenBadge(badgeID, htmlContent) {
    badge = $('#'+badgeID);
    badge.addClass('badge-success');
    badge.removeClass('badge-secondary');
    badge.removeClass('badge-danger');
    badge.removeClass('badge-warning');
    badge.html(htmlContent);
}

function redBadge(badgeID, htmlContent) {
    badge = $('#'+badgeID);
    badge.addClass('badge-danger');
    badge.removeClass('badge-secondary');
    badge.removeClass('badge-success');
    badge.removeClass('badge-warning');
    badge.html(htmlContent);
}

function yellowBadge(badgeID, htmlContent) {
    badge = $('#'+badgeID);
    badge.addClass('badge-warning');
    badge.removeClass('badge-secondary');
    badge.removeClass('badge-success');
    badge.removeClass('badge-danger');
    badge.html(htmlContent);
}

function updateScoreBadge(reviewID) {
    currentScore = $('#score'+reviewID).val();
    badge = $('#badgeScore'+reviewID);
    if (currentScore == '') {
        grayBadge('badgeScore'+reviewID, '✘ No score');
    } else if (currentScore >= 1.0 && currentScore <= 5.0) {
        greenBadge('badgeScore'+reviewID, '✔ Score: '+currentScore);
    } else {
        redBadge('badgeScore'+reviewID, '✘ Invalid Score: '+currentScore);
    }
    $('#scoreInfo'+reviewID).val(evalScore(currentScore));
}

function updateCommentsBadge(reviewID) {
    currentComments = $('#comment'+reviewID).val();
    badgeID = 'badgeComments'+reviewID;
    if (currentComments.trim() == '') {
        grayBadge(badgeID, '✘ No comments');
    } else if (currentComments.length > 10) {
        greenBadge(badgeID, '✔ Comments ('+currentComments.length+' chars)');
    } else {
        redBadge(badgeID, '✘ Comments('+currentComments.length+' chars)');
    }
}

function updateExpertiseBadge(reviewID) {
    currentExpertise = $('#ref_knowledge'+reviewID).val();
    badgeID = 'badgeExpertise'+reviewID;
    if (currentExpertise == '') {
        grayBadge(badgeID, '✘ Expertise missing');
    } else {
        greenBadge(badgeID, '✔ Expertise: '+currentExpertise);
    } 
}

function updateSavedBadge(reviewID, lastUpdated, isComplete) {
    badgeID = 'badgeSaved'+reviewID;
    if (lastUpdated == undefined) { // get from DOM
        lastUpdated = $('#last_updated'+reviewID).val();
        if (lastUpdated != '') {
            d = new Date(lastUpdated * 1000);
            lastUpdated = d.getDate()+' '+monthMap[d.getMonth()]+' '+d.getHours().toString().padStart(2, '0')+':'+d.getMinutes().toString().padStart(2, '0')+':'+d.getSeconds().toString().padStart(2, '0');
        }
    }
    if (isComplete == undefined) {
        isComplete = ["true", "True", true].includes($('#is_complete'+reviewID).val());
    }
    if (lastUpdated == '') {
        grayBadge(badgeID, '✘ Review not saved');
    } else if (!isComplete) {
        yellowBadge(badgeID, '✔ Saved ('+lastUpdated+')');
    } else {
        greenBadge(badgeID, '✔ Saved ('+lastUpdated+')');
    }
}

// when either conflict is checked, the other inputs for that review should be disabled:
function toggleConflictOverride(reviewID) {
    if (conflictExists(reviewID)) {
        $('.badgeReview'+reviewID).css('display', 'none');
        $('#badgeConflict'+reviewID).css('display', 'inline-block');
        $('.reviewInput'+reviewID).attr('disabled', true);
    } else {
        $('.badgeReview'+reviewID).css('display', 'inline-block');
        $('#badgeConflict'+reviewID).css('display', 'none');
        $('.reviewInput'+reviewID).attr('disabled', false);
    }
}

// converts float scale to words:
function evalScore(grade) {
    if (grade === '') {
        return 'no score given';
    }
    if (grade < 1.0 || grade > 5.0) {
        return 'invalid score';
    }
    const signposts = ['outstanding', 'excellent', 'very good', 'good', 'fair', 'rather weak', 'weak', 'very weak', 'rejected'];
    gradePosition = (grade*10) / 5 - 2; // outstanding for a grade of 1.0, etc.

    gradeIsFlat = (grade*10) % 5 === 0; // signpost grades are all multiples of 0.5
    if (gradeIsFlat) {    
        return signposts[gradePosition];
    } else { // gradePosition is float
        between = 'between ';
        for (i = 0; i < signposts.length; i++) {
            if (gradePosition > i && gradePosition < i+1) {
                between += signposts[i]+' and '+signposts[i+1];
            }
        }
        return between;
    }
}

// collapse accordion; "save" button -> "update" in case user wants more changes
function collapseAndChangeSaveButton(reviewID) {
    $('.collapse').collapse('hide');
    $('#successAlert'+reviewID).slideUp();
    $('#saveButton'+reviewID).removeClass('btn-success');
    $('#saveButton'+reviewID).addClass('btn-primary');
    $('#saveButton'+reviewID).html('Update');
    $('#saveButton'+reviewID).attr('onclick', "submitReview("+reviewID+");");
}

function makeJsonOfReview(reviewID) {
    review = {"id": reviewID};
    review.referee_id = parseInt($('#referee_id'+reviewID).val());
    review.proposal_id = parseInt($('#proposal_id'+reviewID).val());

    review.comment = $('#comment'+reviewID).val();
    refKnowledge = $('#ref_knowledge'+reviewID).val();
    score = $('#score'+reviewID).val();
    review.ref_knowledge = refKnowledge == "" ? "" : parseInt(refKnowledge);
    review.score = score == "" ? "" : parseFloat(score);
    review.conflicted = parseInt($('#conflicted'+reviewID).val());
    review.last_updated = $('#last_updated'+reviewID).val();

    return review;
}

var submitReview = function (reviewID) {
{# function submitReview(reviewID) { #}
    token = "{{ user_token|string }}";
    review = makeJsonOfReview(reviewID);

    console.log('sending: '+JSON.stringify(review));
    
    errors = [];
    return $.ajax({
        url: '/save_review',
        type: 'PUT',
        beforeSend: function (xhr) { 
            $('#submitGif'+reviewID).css('display', 'inherit'); 
            xhr.setRequestHeader('Authorization', 'Basic '+token);
        },
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        data: JSON.stringify(review),
        success: function(response) {
            refillSubmittedReview(response);
            proposalEsoId = response.review.proposal_eso_id;
            updateSavedBadge(reviewID);
    
            $('#errorAlert'+reviewID).slideUp();
            $('#successAlert'+reviewID).html('Review for '+proposalEsoId+' saved successfully.');
            $('#successAlert'+reviewID).slideDown();  
            $('#saveButton'+reviewID).addClass('btn-success');
            $('#saveButton'+reviewID).removeClass('btn-primary');
            $('#saveButton'+reviewID).html('✔ Saved (Click to Close)');
            $('#saveButton'+reviewID).attr('onclick', "collapseAndChangeSaveButton("+reviewID+");");

            console.log('received: '+JSON.stringify(response));

            toggleSubmitAllButtonAccess();
        },
        error: function(response) {
            redBadge('badgeSaved'+reviewID, 'Error saving!');
            $('#successAlert'+reviewID).slideUp();
            $('#errorAlert'+reviewID).html('Error: '+JSON.parse(response.responseText).Error);
            $('#errorAlert'+reviewID).slideDown();
            console.log(response.status+": "+response.responseText);
            errors.push(reviewID);
        },
        complete: function() {
            $('#submitGif'+reviewID).css('display', 'none');
        }
    });
};

function refillSubmittedReview(json) {
    review = json.review
    reviewID = review.id
    $('#comment'+reviewID).val(review.comment);
    $('#ref_knowledge'+reviewID+' option').prop('selected', false);
    $('#ref_knowledge'+reviewID+' option[value='+review.ref_knowledge+']').prop('selected', true);
    $('#score'+reviewID).val(review.score);
    $('#conflicted'+reviewID+' option').prop('selected', false);
    $('#conflicted'+reviewID+' option[value='+review.conflicted+']').prop('selected', true);
    $('#last_updated'+reviewID).val(review.last_updated);
    $('#is_complete'+reviewID).val(json.is_complete);
}

function allReviewsComplete() {
    completions = $('.is_complete').filter(function (i) { 
         return ["true", "True", true].includes($(this).val()); 
    });
    return completions.length == $('.review').length;
}

function toggleSubmitAllButtonAccess() {
    button = $('#submitAllButton');
    if (allReviewsComplete()) {
        button.removeClass('btn-secondary');
        button.addClass('btn-primary');
        button.attr('onclick', 'submitAllReviews();');
        button.removeAttr('title');
        button.prop('disabled', false);
    } else {
        button.removeClass('btn-primary');
        button.addClass('btn-secondary');
        button.removeAttr('onclick');
        button.attr('title', 'Please complete and save all reviews individually first.');
        button.prop('disabled', true);
    }
}

function submitAllReviews() {
    $('#submitAllErrors').slideUp();
    $('.collapse').collapse('hide');
    if (window.confirm('Are you sure you want to submit all reviews and your feedback? You will not be able to edit anything after submission.')) {
        // $.when does a bunch of ajax, .then does a callback depending on success of all ajax calls
        $.when(submitReview({{ reviews|join('), submitReview(', attribute='id') }}))
        .then(allSuccess, allFailure); 
    }
}

var allFailure = function() // if 1+ ajax review failed
{
    $('#submitAllErrors').html('There were one or more errors with your review submissions. Please check them above and try again.');
    $('#submitAllErrors').slideDown();
};

var allSuccess = function() // called after all ajax reviews have been successful
{
    // last check to make sure that the submitted reviews are actually complete
    if (allReviewsComplete()) {
        $('#feedbackForm').submit();
    } else {
        $('#submitAllErrors').html('One or more reviews is still incomplete. Please check them above and try again.');
        $('#submitAllErrors').slideDown();
    }    
};

$(document).ready(function () {
    {% for review in reviews %}
        updateScoreBadge({{ review.id }});
        updateCommentsBadge({{ review.id }});
        updateExpertiseBadge({{ review.id }});
        toggleConflictOverride({{ review.id }});
        updateSavedBadge({{ review.id }});
    {% endfor %}
});
</script>
{% endblock %}

{% block styles %}
<style>
dd {
    margin-bottom: 0em;
}
.scoreInfo {
    font-style: italic;
    font-size: .9em;
}
</style>
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-10 offset-md-1">
            <div style="padding-top: 2em;"></div>

            
            <p style="padding-bottom: 1em;">Thank you for participating.</p>
            <h2>Instructions</h2>
            <p>For each review, you must give (1) a score, (2) comments, and (3) an expertise rating for the review to be considered complete. (In case you have a conflict, select your reason from the dropdown. You may leave the other fields empty.)</p>
            <p>You may save a review before completing it; you may also edit a completed review. Once you have completed all reviews, please provide any feedback you may have for us in the bottom text box and click the &ldquo;Finalise All Reviews&rdquo; button. Once you have made this submission, the reviews may no longer be edited.</p>
            <p>Although the information you submit is confidential, please note that your comments will be sent&mdash;anonymously but unfiltered(!)&mdash;to the PI as feedback for their proposal. Consequently, you will receive feedback from eight reviewers on your proposal. We kindly ask you to be considerate and constructive in your comments.</p>


            <div class="card">
            <div class="card-header">Grading Scale</div>
            <div class="card-body">
            <dl class="row">
            <p>The following questions should be considered for the grading:
            <ul>
            <li>Is there sufficient background/context for the non-expert (i.e., someone not specialized in this particular sub-field)?</li>
            <li>Are previous results (either by proposers themselves or in the published literature) clearly presented?</li>
            <li>Are the proposed observations and the Immediate Objectives pertinent to the background description?</li>
            <li>Is the sample selection clearly described, or, if a single target, is its choice justified?</li>
            <li>Are the instrument modes, and target location(s) (e.g., cosmology fields) specified clearly?</li>
            <li>Will the proposed observations add significantly to the knowledge of this particular field?</li>
            </ul>
            </p>

            <p>The full grade scale should be used so as to ensure that the resulting ranking of the proposals is as meaningful as possible. Grades assigned by individual referees can and should be specified with one decimal digit (e.g. 2.7).</p>

            <dt class="col-sm-1">1.0</dt>
            <dd class="col-sm-11">outstanding: breakthrough science</dt>
            <dt class="col-sm-1">1.5</dt>
            <dd class="col-sm-11">excellent: definitely above average</dt>
            <dt class="col-sm-1">2.0</dt>
            <dd class="col-sm-11">very good: no significant weaknesses</dt>
            <dt class="col-sm-1">2.5</dt>
            <dd class="col-sm-11">good: minor deficiencies do not detract from strong scientific case</dt>
            <dt class="col-sm-1">3.0</dt>
            <dd class="col-sm-11">fair: good scientific case, but with definite weaknesses</dt>
            <dt class="col-sm-1">3.5</dt>
            <dd class="col-sm-11">rather weak: limited science return prospects</dt>
            <dt class="col-sm-1">4.0</dt>
            <dd class="col-sm-11">weak: little scientific value and/or questionable scientific strategy</dt>
            <dt class="col-sm-1">4.5</dt>
            <dd class="col-sm-11">very weak: deficiencies outweigh strengths</dt>
            <dt class="col-sm-1">5.0</dt>
            <dd class="col-sm-11">rejected</dt>
            </dl>
            
            </div>
            </div>

            <div style="padding-top: 2em;"></div>

            <h2>Proposals for you to referee:</h2>

            <form method="post">
            
            <div class="accordion" id="proposalsAccordion">
            
            {% for review in reviews %}

            <div class="card review" id="review{{ review.id }}">
                <div class="card-header" id="heading{{ review.id }}">
                    <div class="row">
                    <div class="col-12">
                    <h5 class="mb-0" style="display: inline-block;">
                    <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapse{{ review.id }}" aria-expanded="true" aria-controls="collapse{{ review.id }}">
                        {{ review.proposal.eso_id }}: {{ review.proposal.title }}
                    </button>
                    </h5>
                    </div>

                    <div class="col-12 text-right" style="padding-top: .5em;">
                    <span class="badge badge-info" id="badgeConflict{{ review.id }}">Conflict exists</span>
                    <span class="badge badge-secondary badgeReview{{ review.id }}" id="badgeScore{{ review.id }}">✘ No score</span>
                    <span class="badge badge-secondary badgeReview{{ review.id }}" id="badgeComments{{ review.id }}">✘ No comments</span>
                    <span class="badge badge-secondary badgeReview{{ review.id }}" id="badgeExpertise{{ review.id }}">✘ No expertise</span>
                    &nbsp;&nbsp;&nbsp;
                    <span class="badge badge-secondary" id="badgeSaved{{ review.id }}">✘ Review not saved</span>
                    </div>
                    </div>
                </div>
            
                <div id="collapse{{ review.id }}" class="collapse" aria-labelledby="heading{{ review.id }}" data-parent="#proposalsAccordion">
                    <div class="card-body">
                    <p>{{ review.proposal.abstract }}</p>

                    <p><a href="#">View Proposal PDF</a></p>

                    <hr style="margin-top: 2em; margin-bottom: 2em;">

                    <div class="form-group">
                        <label for="conflicted{{ review.id }}">Do you have a conflict that prevents you from referreeing this proposal?</label>
                        <select class="form-control" id="conflicted{{ review.id }}" name="conflicted{{ review.id }}" onchange="toggleConflictOverride({{ review.id }});">
                            <option value="0">No, I do not have a conflict.</option>
                            <option value="1" {% if review.conflicted == 1 %}selected{% endif %}>Yes, I have a close personal or professional relationship with the PI.</option>
                            <option value="2" {% if review.conflicted == 2 %}selected{% endif %}>Yes, I am a direct competitor to this proposal.</option>
                        </select>
                    </div>

                    <div class="form-row">
                    <div class="form-group col-4">
                        <label for="score{{ review.id }}">Proposal Score</label>
                        <input type="number" class="form-control reviewInput{{ review.id }}" id="score{{ review.id }}" name="score{{ review.id }}" placeholder="1.0 - 5.0" step="0.1" min="1" max="5" onchange="updateScoreBadge({{ review.id }});" onkeyup="updateScoreBadge({{ review.id }});" value="{% if review.score != None %}{{ review.score|round(1) }}{% endif %}" aria-describedby="score{{ review.id }}HelpBlock">
                        <small id="score{{ review.id }}HelpBlock" class="form-text text-muted">Scores range from 1.0 (excellent) to 5.0 (rejected)</small>
                    </div>
                    <div class="form-group col-8">
                        <label for="scoreInfo{{ review.id }}" style="visibility: hidden;">Score Info</label>
                        <input type="text" readonly class="form-control-plaintext scoreInfo" id="scoreInfo{{ review.id }}" value="" style="text-decoration: italic;">
                    </div>
                    </div>

                    <div class="form-group">
                        <label for="comment{{ review.id }}">Comments</label>
                        <textarea class="form-control reviewInput{{ review.id }}" id="comment{{ review.id }}" name="comment{{ review.id }}" rows="3" onchange="updateCommentsBadge({{ review.id }});" onkeyup="updateCommentsBadge({{ review.id }});">{% if review.comment != None %}{{ review.comment }}{% endif %}</textarea>
                    </div>

                    <div class="form-group">
                        <label for="ref_knowledge{{ review.id }}">Your Expertise</label>
                        <select class="form-control reviewInput{{ review.id }}" id="ref_knowledge{{ review.id }}" name="ref_knowledge{{ review.id }}" onchange="updateExpertiseBadge({{ review.id }});">
                            <option value="">Please choose one</option>
                            <option value="1" {% if review.ref_knowledge == 1 %}selected{% endif %}>(1) This is my field of expertise.</option>
                            <option value="2" {% if review.ref_knowledge == 2 %}selected{% endif %}>(2) I have some general knowledge of this field.</option>
                            <option value="3" {% if review.ref_knowledge == 3 %}selected{% endif %}>(3) I have little or no knowledge of this field.</option>
                        </select>
                    </div>

                    <hr style="margin-top: 2em; margin-bottom: 2em;">
                    
                    <input type="hidden" id="referee_id{{ review.id }}" name="referee_id{{ review.id }}" value="{{ review.referee_id }}">
                    <input type="hidden" id="proposal_id{{ review.id }}" name="proposal_id{{ review.id }}" value="{{ review.proposal_id }}">
                    <input type="hidden" id="last_updated{{ review.id }}" name="last_updated{{ review.id }}" value="{% if review.last_updated != None %}{{ review.last_updated.timestamp() }}{% endif %}">
                    <input type="hidden" id="is_complete{{ review.id }}" class="is_complete" name="is_complete{{ review.id }}" value="{{ review|is_complete }}">

                    <div class="alert alert-danger" id="errorAlert{{ review.id }}" style="display: none;">
                    </div>
                    <div class="alert alert-success" id="successAlert{{ review.id }}" style="display: none;">
                    </div>

                    <div class="form-group text-center" style="margin-top: 2em;">
                        <button type="button" class="btn btn-primary" id="saveButton{{ review.id }}" onclick="submitReview({{ review.id }});">
                            <img src="../img/ajax-loader.gif" id="submitGif{{ review.id }}" class="submitGif" style="display: none;">
                            &nbsp;Save this Review
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="$('.collapse').collapse('hide');">Close without Submitting</button>
                    </div>
                    </div> {# /.card-body #}
                </div> {# /#collapse #}
            </div>

            {% endfor %}

            </div> {# /proposalsAccordion #}
            </form>

            <form method="post" action="/finalize" id="feedbackForm">
            <div class="form-group">
            <h3 style="padding-top: 2em;"><label for="referee_comments">Your feedback for us:</label></h3>
            <textarea class="form-control" id="feedback" name="feedback"></textarea>
            </div>

            <hr style="padding-top: 1em; padding-bottom: 1em;">

            <div class="alert alert-danger" style="display: none;" id="submitAllErrors">{# submitAll errors go here #}</div>

            <div class="form-group text-center">
            {% if all_complete %}
                <button class="btn btn-primary btn-lg" type="button" id="submitAllButton" onclick="submitAllReviews();">
            {% else %}
                <button class="btn btn-secondary btn-lg" type="button" id="submitAllButton" title="Please complete and save all reviews individually first." disabled>
            {% endif %}
            Finalise All Reviews</button>

            <a class="btn btn-secondary btn-lg" href="logout">Logout</a>
            </div>

            </form>

            <div style="padding-top: 4em;"></div>

        </div>
    </div>
{% endblock %}


