{% extends "base.html.j2" %}

{% block scripts %}
<script>
// converts float scale to words:
function evalScore(grade) {
    if (grade === '') {
        return 'no score given';
    }
    if (grade < 1.0 || grade > 5.0) {
        return 'invalid score';
    }
    const signposts = ['outstanding', 'excellent', 'very good', 'good', 'fair', 'rather weak', 'weak', 'very weak', 'rejected'];
    gradePosition = (grade*10) / 5 - 2; // outstanding for a grade of 1.0, etc.

    gradeIsFlat = (grade*10) % 5 === 0; // signpost grades are all multiples of 0.5
    if (gradeIsFlat) {    
        return signposts[gradePosition];
    } else { // gradePosition is float
        between = 'between ';
        for (i = 0; i < signposts.length; i++) {
            if (gradePosition > i && gradePosition < i+1) {
                between += signposts[i]+' and '+signposts[i+1];
            }
        }
        return between;
    }
}

function setButtonStyle(reviewID) {
    val = $("input[name=rank"+reviewID+"]:checked").val();
    ranking = val == undefined ? 0 : parseInt(val);
    $('.btnLabel'+reviewID).removeClass('btn-secondary');
    $('.btnLabel'+reviewID).removeClass('btn-danger');
    $('.btnLabel'+reviewID).removeClass('btn-warning');
    $('.btnLabel'+reviewID).removeClass('btn-success');
    if (ranking == 0) {
        $("#rank"+reviewID+"_one").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_two").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_three").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_four").parent().addClass('btn-secondary');
    } else if (ranking == 1) {
        $("#rank"+reviewID+"_one").parent().addClass('btn-danger');
        $("#rank"+reviewID+"_two").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_three").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_four").parent().addClass('btn-secondary');
    } else if (ranking == 2) {
        $("#rank"+reviewID+"_one").parent().addClass('btn-warning');
        $("#rank"+reviewID+"_two").parent().addClass('btn-warning');
        $("#rank"+reviewID+"_three").parent().addClass('btn-secondary');
        $("#rank"+reviewID+"_four").parent().addClass('btn-secondary');
    } else if (ranking == 3) {
        $("#rank"+reviewID+"_one").parent().addClass('btn-warning');
        $("#rank"+reviewID+"_two").parent().addClass('btn-warning');
        $("#rank"+reviewID+"_three").parent().addClass('btn-warning');
        $("#rank"+reviewID+"_four").parent().addClass('btn-secondary');
    } else if (ranking == 4) {
        $("#rank"+reviewID+"_one").parent().addClass('btn-success');
        $("#rank"+reviewID+"_two").parent().addClass('btn-success');
        $("#rank"+reviewID+"_three").parent().addClass('btn-success');
        $("#rank"+reviewID+"_four").parent().addClass('btn-success');
    }

    if (ranking == 0) {
        $("#clearButton"+reviewID).addClass("invisible");
    } else {
        $("#clearButton"+reviewID).removeClass("invisible");
    }

    return ranking;
}

function clearRating(reviewID) {
    $("input[name=rank"+reviewID+"]:checked").prop("checked", false);
    setButtonStyle(reviewID);
    $('.btnLabel'+reviewID).removeClass('active');
    $("#clearButton"+reviewID).addClass("invisible");
}

function makeJsonOfReviewRating(reviewID) {
    reviewRating = {"id": reviewID};
    // TODO: get embedded values and clicked button, make into json for ajax
    {# review.referee_id = parseInt($('#referee_id'+reviewID).val());
    review.proposal_id = parseInt($('#proposal_id'+reviewID).val());

    review.comment = $('#comment'+reviewID).val();
    refKnowledge = $('#ref_knowledge'+reviewID).val();
    score = $('#score'+reviewID).val();
    review.ref_knowledge = refKnowledge == "" ? "" : parseInt(refKnowledge);
    review.score = score == "" ? "" : parseFloat(score);
    review.conflicted = parseInt($('#conflicted'+reviewID).val());
    review.last_updated = $('#last_updated'+reviewID).val(); #}

    return review;
}

var submitReviewRating = function (reviewID) {
    // TODO: turn reviewRating into json, send via ajax, on success show a check mark and refill buttons; on failure show message
    {# token = "{{ user_token|string }}";
    review = makeJsonOfReview(reviewID);

    console.log('sending: '+JSON.stringify(review));
    
    errors = [];
    return $.ajax({
        url: '/save_review',
        type: 'PUT',
        beforeSend: function (xhr) { 
            $('#submitGif'+reviewID).css('display', 'inherit'); 
            xhr.setRequestHeader('Authorization', 'Basic '+token);
        },
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        data: JSON.stringify(review),
        success: function(response) {
            refillSubmittedReview(response);
            proposalEsoId = response.review.proposal_eso_id;
            updateSavedBadge(reviewID);
    
            $('#errorAlert'+reviewID).slideUp();
            $('#successAlert'+reviewID).html('Review for '+proposalEsoId+' saved successfully.');
            $('#successAlert'+reviewID).slideDown();  
            $('#saveButton'+reviewID).addClass('btn-success');
            $('#saveButton'+reviewID).removeClass('btn-primary');
            $('#saveButton'+reviewID).html('✔ Saved (Click to Close)');
            $('#saveButton'+reviewID).attr('onclick', "collapseAndChangeSaveButton("+reviewID+");");

            console.log('received: '+JSON.stringify(response));

            toggleSubmitAllButtonAccess();
        },
        error: function(response) {
            redBadge('badgeSaved'+reviewID, 'Error saving!');
            $('#successAlert'+reviewID).slideUp();
            $('#errorAlert'+reviewID).html('Error: '+JSON.parse(response.responseText).Error);
            $('#errorAlert'+reviewID).slideDown();
            console.log(response.status+": "+response.responseText);
            errors.push(reviewID);
        },
        complete: function() {
            $('#submitGif'+reviewID).css('display', 'none');
        }
    }); #}
};

function refillSubmittedReviewRating(json) {
    // TODO: set buttons to what was returned from ajax
    {# review = json.review
    reviewID = review.id
    $('#comment'+reviewID).val(review.comment);
    $('#ref_knowledge'+reviewID+' option').prop('selected', false);
    $('#ref_knowledge'+reviewID+' option[value='+review.ref_knowledge+']').prop('selected', true);
    $('#score'+reviewID).val(review.score);
    $('#conflicted'+reviewID+' option').prop('selected', false);
    $('#conflicted'+reviewID+' option[value='+review.conflicted+']').prop('selected', true);
    $('#last_updated'+reviewID).val(review.last_updated);
    $('#is_complete'+reviewID).val(json.is_complete); #}
}

$(document).ready(function () {
    {% for review in reviews_for_pi %}
        setButtonStyle({{ review.id }});
    {% endfor %}
});
</script>
{% endblock %}

{% block styles %}
<style>
.scoreInfo {
    font-style: italic;
    font-size: .9em;
}

.btn-group-xs > .btn, .btn-xs {
    padding  : .25rem .4rem;
    font-size  : .875rem;
    line-height  : .5;
    border-radius : .2rem;
    font-size: .75rem;
}
</style>
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-10 offset-md-1">
            <div style="padding-top: 2em;"></div>

            <p>Thank you again for participating in the DPR experiment!</p>

            <p>The reviews submitted for your proposal are displayed below.<br>We would be grateful if you could rate the usefulness of each review on a scale of 1 (not useful) to 4 (very useful). These ratings will not be distributed further but help us assess whether expertise in a field played a role in the quality of the review.</p>

            <p>Also, after reading the reviews, please take 10-15min to fill the final questionnaire (see the link at the bottom of this page). Although it is optional, it is your chance to give us feedback on any aspect that you liked/disliked and to shape a future DPR process. It will also greatly assist us in understanding how the experiment went, learn about what works and not, which biases are still present etc. Eventually it will allow us to build a better tool for you in the future.</p>

            <p>Many thanks from all the ESO team for your support!</p>

            <div style="padding-top: 2em;"></div>

            <h2>Reviews of your proposal:</h2>

            <form method="post">
                       
            {% for review in reviews_for_pi %}
            {% set assigned_rating = ratings[review.referee_id] if review.referee_id in ratings else 0 %}
            {% set no_review = review.comment == None or review.conflicted > 0  %}

            <div class="card review my-3" id="review{{ review.id }}">
            
                <div class="card-body">
                    {% if no_review %}
                        <p class="text-center"><em>No comment—this reviewer either did not respond or was conflicted.</em></p>
                    {% else %}
                        <p>{{ review.comment }}</p>
                    {% endif %}

                    {% if not no_review %}
                    <div class="text-center">
                        <span>Rate this review:</span><br>
                        <small class="text-muted">not useful</small>
                        {# <div class="btn-group btn-group-sm" role="group" aria-label="First group">
                            <button type="button" class="btn btn-danger">1</button>
                            <button type="button" class="btn btn-warning">2</button>
                            <button type="button" class="btn btn-warning">3</button>
                            <button type="button" class="btn btn-success">4</button>
                        </div> #}
                        <div class="btn-group btn-group-sm btn-group-toggle" role="group" data-toggle="buttons">
                            <label class="btn btnLabel{{ review.id }}">
                                <input type="radio" name="rank{{ review.id }}" id="rank{{ review.id }}_one" value="1" autocomplete="off" onchange="setButtonStyle({{ review.id }});"
                                {% if assigned_rating == 1 %}checked{% endif %}>1
                            </label>
                            <label class="btn btnLabel{{ review.id }}">
                                <input type="radio" name="rank{{ review.id }}" id="rank{{ review.id }}_two" value="2" autocomplete="off" onchange="setButtonStyle({{ review.id }});"
                                {% if assigned_rating == 2 %}checked{% endif %}>2
                            </label>
                            <label class="btn btnLabel{{ review.id }}">
                                <input type="radio" name="rank{{ review.id }}" id="rank{{ review.id }}_three" value="3" autocomplete="off" onchange="setButtonStyle({{ review.id }});"
                                {% if assigned_rating == 3 %}checked{% endif %}>3
                            </label>
                            <label class="btn btnLabel{{ review.id }}">
                                <input type="radio" name="rank{{ review.id }}" id="rank{{ review.id }}_four" value="4" autocomplete="off" onchange="setButtonStyle({{ review.id }});"
                                {% if assigned_rating == 4 %}checked{% endif %}>4
                            </label>
                        </div>
                        <small class="text-muted">very useful</small>

                        <div class="my-1 invisible" id="clearButton{{ review.id }}">
                            <button type="button" class="btn btn-xs btn-secondary" onclick="clearRating({{ review.id }});">Clear rating</button>
                        </div>
                        
                    </div>
                    {% endif %}
                    
                </div> {# /.card-body #}
            </div>

            {% endfor %}
           </form>

            <hr class="my-4">

            <h2>Questionnaire</h2>
            <p>Please find the questionnaire here: <a href="https://goo.gl/forms/ktPz9lTIi0oNUlCs2" target="_blank">https://goo.gl/forms/ktPz9lTIi0oNUlCs2</a></p>

            <div style="padding-top: 4em;"></div>

            <div class="form-group text-center">
            <a class="btn btn-primary btn-lg" href="logout">Logout</a>
            </div>

            <div style="padding-top: 6em;"></div>

        </div>
    </div>
{% endblock %}


